Создания нового проекта.
Нажимаем на Open Folder и выбираем нужную директорию.
После чего создаём новый файл с расширением .c .

Команды в VS code:
Ctrl + Alt + n - Компиляция
Ctrl + Shift + b - Перекомпиляция


Настройка среды VS code.
В .vscode > tasks.json в значения ключа args добавляем - "-std=c99".
В VS code File > Preferences > Settings:
В поисковую строку вписываем "code runner run in terminal" и ставим галочку.
В поисковую строку вписываем "Run Code Configuration" и ищем "Code-runner:Executor Map"
после чего переходим в Edit in settings.json в словаре code-runner.executorMap",
в значении ключа "c" после && gcc также вставляем -std=c99ю


Переменные и константы.
unsigned - беззнаковый тип переменной.
signed - знаковаый тип переменной.
char byte_mammory; - <тип переменной> <имя переменной>;

Типы численных данных:
	char: представляет один символ. Занимает в памяти 1 байт (8 бит). Может хранить любое значение из диапазона от -128 до 127
	unsigned char: представляет один символ. Занимает в памяти 1 байт (8 бит). Может хранить любой значение из диапазона от 0 до 255
	signed char: то же самое, что и char
	short: представляет целое число в диапазоне от –32768 до 32767. Занимает в памяти 2 байта (16 бит).
	Имеет псевдонимы short int, signed short и signed short int.
	unsigned short: представляет целое число в диапазоне от 0 до 65535. Занимает в памяти 2 байта (16 бит).
	Имеет псевдоним unsigned short int.
	int: представляет целое число. В зависимости от архитектуры процессора может занимать 2 байта (16 бит) или 4 байта (32 бита). Если брать основные платформы - 64-разрядные Windows, Linux (вместе с Android) и MacOS, то размер int составляет 4 байта. Диапазон предельных значений соответственно также может варьироваться от –32768 до 32767 (при 2 байтах) или от −2 147 483 648 до 2 147 483 647 (при 4 байтах) и выше.
	Имеет псевдонимы signed int и signed
	unsigned int: представляет положительное целое число. В зависимости от архитектуры процессора может занимать 2 байта (16 бит) или 4 байта (32 бита), и из-за этого диапазон предельных значений может меняться: от 0 до 65535 (для 2 байт), либо от 0 до 4 294 967 295 (для 4 байт).
	Имеет псевдоним unsigned: то же самое, что и unsigned int
	long: представляет целое число и занимает в памяти 4 байта (32 бита) или 8 байт (64 бита). В зависимости от размера может находиться в в диапазоне от -2 147 483 648 до 2 147 483 647 (4 байта), либо в диапазоне от -9223372036854775807 до +9 223 372 036 854 775 807 (8 байт)
	Если брать распростренные платформы, то на 64-разрядном Windows long занимает 4 байта, а на 64-разрядных Linux/MacOS - 8 байт.
	Имеет псевдонимы long int, signed long int и signed long.
	unsigned long: представляет целое число и занимает в памяти 4 байта (32 бита) или 8 байт (64 бита). В зависимости от размера может находиться в в диапазоне от 0 до 4 294 967 295 (4 байта) или в диапазоне от 0 до 18 446 744 073 709 551 615 (8 байт).
	Имеет псевдоним unsigned long int.
	long long: представляет целое число в диапазоне от -9223372036854775807 до +9 223 372 036 854 775 807. Занимает в памяти, как правило, 8 байт (64 бита).
	Имеет псевдонимы long long int, signed long long int и signed long long.
	unsigned long long: представляет целое число в диапазоне от 0 до 18 446 744 073 709 551 615. Занимает в памяти, как правило, 8 байт (64 бита).
	Имеет псевдоним unsigned long long int.
	float: представляет вещественное число одинарной точности с плавающей точкой в диапазоне +/- 3.4E-38 до 3.4E+38. В памяти занимает 4 байта (32 бита)
	double: представляет вещественное число двойной точности с плавающей точкой в диапазоне +/- 1.7E-308 до 1.7E+308. В памяти занимает 8 байт (64 бита)
	long double: представляет вещественное число двойной точности с плавающей точкой в диапазоне +/- 3.4E-4932 до 1.1E+4932. В памяти занимает 10 байт (80 бит). На некоторых системах может занимать 96 и 128 бит.
	void: тип без значения





Старндартные функции ввода / вывода:
	Через поток stdout:
		putchar() - для вывода символов.
		printf() - для форматного вывода строки.
	Через поток stderr:
		perror() - для вывода ошибок в виде строки.
	Через поток stdout:
		getchar() - чтение одного байта (символа).
		scanf() - выполнение форматного ввода данных.
	* Для их использования в начале должна быть прописана директива: #include <stdio.h> 



%d или %i - Целое число со знаком в десятичной форме (типа int).
%u - Целое беззнаковое (unsigned) число в десятичной форме.
%o - Целое беззнаковое (unsigned) число в восьмеричной форме.
%х или %Х - Целое беззнаковое (unsigned) число в шестнадцатеричной форме.
%f или %F - Вещественное число в виде десятичной дроби.
%е или %E - Вещественное число в экспоненциальной форме.
%c - Символ в соответствии с текущей кодовой таблицей.
%s - Строка (последовательность символов).
%% - Запись символа % в форматной строке.

Так же перед спецификаторами (буквами после знака проценат), 
мы можем прописывать l-long и ll-long long, L - для вещественных чисел.


Десятичное число - Задает минимальную ширину поля выводимой информации.
Знак «-» - Задает выравнивание по левому краю в пределах спецификатора.
Знак «+» - Задает отображение чисел со знаками «+» и «-».
Цифра 0 - Заполнение нулями свободной области в пределах спецификатора.
Пробел - Задает отображение положительных чисел с пробелом в начале и со знаком «-» для отрицательных.
Символ «#» - Задает отображение префикса числа (0х – для шестнадцатеричных; 0 – для восьмеричных).

 
// Функция scanf

// Спецификаторы преобразований для scanf
// %d - Целое число со знаком в десятичной форме. (Приводится к типу int).
// %i - Целое число в десятичной, шестнадцатеричной или восьмеричной системах. (Приводится к типу int).
// %u - Целое беззнаковое (unsigned) число в десятичной форме. (Приводится к типу unsigned int).
// %o - Целое число в восьмеричной форме. (Приводится к типу int).
// %x,%X - Целое число в шестнадцатеричной форме. (Приводится к типу int).
// %f,%e, %g %F, %E, %G - Вещественное число. (Приводится к типу float).
// %c - Символ в соответствии с текущей кодовой таблицей. (Приводится к типу char).
// %s - Строка (последовательность символов). Читается до первого пробела, перевода строки или символа табуляции.

// Дополнительные модификаторы.

// h - %hd,%hi - для short int;
//     %hx, %ho, %hu - для unsigned short

// hh -  %hhd - для signed char;
//       %hhu - для unsigned char

// l - %ld, %li - для long int;
//     %hx, %ho, %hu - для unsigned long;
//     %lf, %lg, ole - для double

// L - %Lf, %Lg, %Le - для long double

// LL (в стандарте C99)  - %lld - для long long int;
//                         %llu - для unsigned long long

// цифры - Максимальная ширина ввода (либо достигается максимальная ширина, либо служебный символ).
        
// * - Пропуск данных.


Установка приложения
py -m  venv venv - создаём витруальное окружение в директории нашего проекта
source ./venv/bin/activate - заходим в витруальное окружение
pip install fastapi - импортируем библиотеку fastapi
pip install 
	sqlalchemy 
	pydantic 
	alembic 
	asyncpg (альтернатива psycopg2)


Структура проекта.
	venv
	app
		main.py
		schemes
			schemes.py



Запуск приложения 
uvicorn app.main:app - запуск приложения
uvicorn app.main:app --reload - запуск приложения с автоматическим перезапуском в случае изменения кода


Работа с данными.
	- Pydantic
	Пример использования:
		from pydantic import BaseModel
		class SHotel(BaseModel):
			address: str
			name: str
			stars: int


Работа с БД.
	- SQLAlchemy - популярная ORM (Object-Relational Mapping, объектно-реляционное отображение) для работы с БД.
	- Alembic - Популярная библиотека для миграций.
$ alembic init migrations
env.py 
	# Указываем alembic, что он находится в директории app, чтобы корректно работали импорты
	import sys
	from os.path import abspath, dirname
	sys.path.insert(0, dirname(dirname(dirname(abspath(__file__)))))
	# Передаём данные о таблицах созданных на бекэнде
	target_metadata = Base.metadata 
	# Указали alembic с какой БД сравнивать
	config.set_main_option("sqlalchemy.url", f"{DATABASE_URL}?async_fallback=True")

# Создание миграции
$ alembic revision --autogenerate -m "Initial migration"
# Прогон миграции до последней
$ alembic upgrade head 
# Прогон конкректой миграции 
$ alembic upgrade cc6ef810b14e

# Для отката на одну миграцию, можно использовать
$ alembic downgrade -1

	
Кэширование.
	- FatsAPI Cache
	- Redis
	
Ассинхронные задачи
	- Celery
	- RabbitMQ


Взаимодействие с фронтендом
	- CORS
	- HTML шаблоны (Jinja)
	- Пагинация
	
	
Авторизация
	- FatsAPI Users
	
	
Тестирование
	- Pytest
	- httpx
	
	
Логирование
	- Sentry
	
	
	
	
	
	
	
	
	
	
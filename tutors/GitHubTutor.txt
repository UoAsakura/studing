
Если мы хотим создать новый репозиторий на GitHub, то во-первых нам нужно нажать соответствующую кнопку,
например, на главной странице сайта, после чего дать ему имя.
После этого, кликнув на кнопку Code внутри нашего репозитория мы можем получить ссылку на него а разделе HTTPS.

Дальше, для того чтобы создать из него проект в PyCharm, мы должны перейти в раздел VCS и в нем перейти в
Get From Version Control. В URL вставляем ранее скопированную ссылку.

По желанию мы можем добавить виртуальное окружение в наш проект (venv).

После мы можем создать ветку через New Branch. После чего можем создавать как питоновские файлы, так и желательный
текстовый файл 'README.md'. 

Так же учитывая, что мы работаем через PyCharm для удобства мы можем раскоментировать строчку .idea/ в
.gitignore нашего проекта.

Так же хорошей практикой является удаление старых веток.

Консольные команды.
git status - показывает статус нашего проекта.
git add . - добавление изменений.
git commit -m "Added feature" - коммит с названием Added feature.
git config --local user.email "eugenij.bojarov@gmail.com" - способ создать конфигурацию коммита идентифицурую
себя в git. Этой и следующей команд можно измежать если после создания нового репозитория, мы укажем SSH.
git config --local user.name "Hysteresis_calculation" - способ создать конфигурацию коммита указывая имя проекта.
git push - отправить файл в удалённый репозиторий.
git pull - подтягивание изменений с git.


Работа без постоянного ввода пароля (через SSH).
В терминале ввести команду ssh-keygen и после несколько раз прожать Enter.
После можно вводить следующую команду, а именно cat .ssh/id_rsa.pub и тогда нам покажется публичный ключ.
Далее мы переходим в аккаунт git/settings/keys (https://github.com/settings/keys) и пользуемся функцией
создания нового ssh-ключа.

Конфликт при работе с GIT.



АЛЬТЕРНАТИВНЫЙ СПОСОБ.
Создаём дикертирию.
git init - инициализируем локальный репозиторий.
gh repo create - привязываем локальный к репозиторию на GitHub параллельно 
создавая его там.

Либо мы можем создать его на GitHub, после чего перейдя в терминал:
git clone <ссылка на наш репозиторий на GitHub>

ВЕТКИ. СЛИЯНИЕ ВЕТОК. PULL-REQUEST
git checkout -b <name> - создание новой ветки.
git chechout <name_branch> - перемещение в конкретную ветку.






















